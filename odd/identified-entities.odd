<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:tei="http://www.tei-c.org/ns/1.0" xmlns:teix="http://www.tei-c.org/ns/Examples" xmlns:xi="http://www.w3.org/2001/XInclude" xml:lang="en">
   <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>Name Register Transcription Guide</title>
            <author>Michael Hawkins</author>
         </titleStmt>
         <publicationStmt>
            <publisher>Darwin Correspondence Project</publisher>
            <pubPlace>Cambridge</pubPlace>
            <date when="2022">2022</date>
            <availability status="free">
               <licence target="http://creativecommons.org/licenses/by-sa/3.0/"> Distributed under a
            Creative Commons Attribution-ShareAlike 3.0 Unported License </licence>
               <licence target="http://www.opensource.org/licenses/BSD-2-Clause">
                  <p>Copyright 2013 TEI Consortium.</p>
                  <p>All rights reserved.</p>
                  <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>
                  <list>
                     <item>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</item>
                     <item>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</item>
                  </list>
                  <p>This software is provided by the copyright holders and contributors "as is" and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the copyright holder or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.</p>
               </licence>
               <p>TEI material can be licensed differently depending on the use you intend to make of it. Hence it is made available under both the CC+BY and BSD-2 licences. The CC+BY licence is generally appropriate for usages which treat TEI content as data or documentation. The BSD-2 licence is generally appropriate for usage of TEI content in a software environment. For further information or clarification, please contact the <ref target="mailto:info@tei-c.org">TEI Consortium</ref>. </p>
            </availability>
         </publicationStmt>
         <sourceDesc>
            <p>Born digital</p>
         </sourceDesc>
      </fileDesc>
   </teiHeader>
   <text>
      <body>
         <p>This customization loads the normal four core modules, plus <name>figures</name>; in the latter it adjusts the content model of <gi>figure</gi> to allow the <gi>math</gi> element from MathML (see <ptr target="http://www.w3.org/Math/"/>).</p>
         <p>Example: <eg xml:space="preserve">&lt;formula&gt; &lt;math xmlns="http://www.w3.org/1998/Math/MathML"&gt; &lt;mrow&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt; &lt;/math&gt; &lt;/formula&gt;</eg> </p>
         <schemaSpec ident="identified-entities" prefix="tei_" start="person personGrp org" defaultExceptions="http://www.tei-c.org/ns/1.0 http://www.w3.org/1998/Math/MathML teix:egXML">
            <moduleRef url="https://www.tei-c.org/release/xml/tei/Exemplars/mathml2-main.rng"/>
            <moduleRef key="tei"/>
            <moduleRef n="03" key="core" include="choice date hi lb note p ref term">
               <!--Unused elements: abbr add addrLine address analytic author bibl biblScope biblStruct binaryObject cb cit citedRange corr del desc distinct divGen editor ellipsis email emph expan foreign gap gb gloss graphic head headItem headLabel imprint index item l label lg list listBibl measure measureGrp media meeting mentioned milestone monogr name noteGrp num orig pb postBox postCode ptr pubPlace publisher q quote rb reg relatedItem resp respStmt rs rt ruby said series sic soCalled sp speaker stage street teiCorpus textLang time title unclear unit-->
            </moduleRef>
            <moduleRef n="13" key="namesdates" include="affiliation forename genName nameLink org orgName persName person personGrp roleName sex surname">
               <!--Unused elements: addName age birth bloc climate country death district education event faith floruit geo geogFeat geogName langKnowledge langKnown listEvent listNym listObject listOrg listPerson listPlace listRelation location nationality nym object objectIdentifier objectName occupation offset persPronouns persona place placeName population region relation residence settlement socecStatus state terrain trait-->
            </moduleRef>
            <moduleRef n="14" key="figures" include="formula">
               <!--Unused elements: cell figDesc figure notatedMusic row table-->
            </moduleRef>
            <moduleRef n="16" key="linking" include="seg">
               <!--Unused elements: ab alt altGrp anchor annotation join joinGrp link linkGrp listAnnotation standOff timeline when-->
            </moduleRef>
            <classSpec module="tei" type="atts" ident="att.docStatus" mode="change">
               <attList>
                  <attDef ident="status" mode="change">
                     <valList type="closed" mode="replace">
                        <valItem ident="deprecated"/>
                        <valItem ident="cancelled"/>
                        <valItem ident="draft"/>
                        <valItem ident="released"/>
                        <valItem ident="submitted"/>
                     </valList>
                  </attDef>
               </attList>
            </classSpec>
            <classSpec module="tei" type="atts" xml:id="DATABLE" ident="att.datable" mode="change">
               <constraintSpec ident="ensure-both-ends-of-range-used" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="*[(@notBefore|@notAfter)]">
                        <report test="(@notBefore and not(@notAfter))">ERROR. <name/> missing @notAfter</report>
                        <report test="(@notAfter and not(@notBefore))">ERROR. <name/> missing @notBefore</report>
                        <report test="some $x in (@notAfter,@notBefore) satisfies normalize-space($x)=''">ERROR. <name/> has empty <value-of select="for $x in (@notAfter,@notBefore) return $x[normalize-space(.)='']/concat('@',local-name(.))"/>
                        </report>
                     </rule>
                  </constraint>
               </constraintSpec>
            </classSpec>

            <!--Element definitions-->

            <!--Elements from core-->
            
            <elementSpec module="core" ident="choice" mode="change" xml:base="elements-nameregs/choice.xml">
               <classes mode="change">
                  <memberOf key="att.global" mode="delete"/>
               </classes>
               <content>
                  <alternate minOccurs="2" maxOccurs="unbounded">
                     <elementRef key="seg"/>
                     <elementRef key="seg"/>
                  </alternate>
               </content>
               <constraintSpec ident="ensure-only-has-seg-children" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:choice">
                        <report test="*[not(self::tei:seg)]">ERROR: <name/> may only contain a series of seg elements, each of which has datable name information in it.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>

            <elementSpec ident="date" module="core" mode="change" xml:base="elements-lett/date.xml">
               <desc versionDate="2014-05-21" xml:lang="en">records a date or date range using ISO format (yyyy-mm-dd).</desc>
               <classes mode="change">
                  <memberOf key="att.canonical" mode="delete"/>
                  <memberOf key="att.datable" mode="delete"/>
                  <memberOf key="att.dimensions" mode="delete"/>
                  <memberOf key="att.duration" mode="delete"/>
                  <memberOf key="att.editLike" mode="delete"/>
                  <memberOf key="att.global" mode="delete"/>
                  <memberOf key="att.typed" mode="delete"/>
               </classes>
               <constraintSpec ident="date-exclude" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date">
                        <let name="current_date" value="."/>
                        <let name="context" value="//ancestor::*[local-name()=('correspDesc','birth','death','event')][1]/local-name()"/>
                        <let name="all_dates" value="$current_date//ancestor::*[local-name()=$context]//tei:date"/>
                        <report test="normalize-space(@exclude) != '' and count(tokenize(@exclude,'\s+')[.=$all_dates[not(@xml:id=$current_date/@xml:id)]/concat('#',@xml:id)]) != count(tokenize(@exclude,'\s+'))">ERROR: <name/>@exclude value(s) (<value-of select="tokenize(@exclude,'\s+')[not(.=$all_dates[not(@xml:id=$current_date/@xml:id)]/concat('#',@xml:id))]"/>) does not point to <value-of select="$context"/>//date/@xml:id</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-exclude-points-to-self" scheme="schematron">
                  <constraint>
                     <report xmlns="http://purl.oclc.org/dsdl/schematron" test="@exclude and normalize-space(@exclude) != '' and tokenize(@exclude,'\s+')=concat('#',@xml:id)">ERROR: <name/>@exclude value (<value-of select="concat('#',@xml:id)"/>) points to same element as itself</report>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-exclude-not-xmlid" scheme="schematron">
                  <constraint>
                     <report xmlns="http://purl.oclc.org/dsdl/schematron" test="@exclude and normalize-space(@exclude) != '' and not(@xml:id)">ERROR: <name/> needs @xml:id</report>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-xmlid-not-exclude" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@xml:id]">
                        <let name="elem" value="."/>
                        <let name="tei_root" value="ancestor::tei:TEI"/>
                        <assert test="concat('#',$elem/@xml:id) = ($tei_root/tei:teiHeader//tei:date/@sameAs,$tei_root/tei:teiHeader//tei:date/tokenize(@exclude,'\s+'))">ERROR: <name/>@xml:id must be the target of date@exclude or date@sameAs</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-sameas-check" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@sameAs]">
                        <let name="elem" value="."/>
                        <let name="tei_root" value="ancestor::tei:TEI"/>
                        <assert test="@sameAs = ($tei_root/tei:teiHeader//tei:date|$tei_root/tei:text//tei:rs[@type='date'])/concat('#',@xml:id)">ERROR: <name/>@sameAs must point to date@xml:id</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-xmlid-not-linked-to" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date">
                        <let name="current_date" value="."/>
                        <let name="context" value="//ancestor::*[local-name()=('correspDesc','birth','death','event')][1]/local-name()"/>
                        <let name="all_dates" value="$current_date//ancestor::*[local-name()=$context]//tei:date"/>
                        <report test="@exclude and not(concat('#',@xml:id) = $all_dates/tokenize(@exclude,'\s+'))">ERROR: <name/> is not the target of any @exclude</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-exclude-missed-xmlid" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date">
                        <let name="current_date" value="."/>
                        <let name="context" value="//ancestor::*[local-name()=('correspDesc','birth','death','event')][1]/local-name()"/>
                        <let name="all_dates" value="$current_date//ancestor::*[local-name()=$context]//tei:date"/>
                        <report test="@exclude and normalize-space(@exclude)!='' and count( tokenize(@exclude,'\s+')[.= $all_dates/concat('#',@xml:id)]) != count($all_dates[@xml:id])-1">ERROR: <name/> does not link to (<value-of select="$all_dates[not(@xml:id=$current_date/@xml:id)]/concat('#',@xml:id)[not(.=tokenize($current_date/@exclude,'\s+'))]"/>)</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-xmlid-not-in-all-other-dates" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date">
                        <let name="current_date" value="."/>
                        <let name="context" value="//ancestor::*[local-name()=('correspDesc','birth','death','event')][1]/local-name()"/>
                        <let name="all_dates" value="$current_date//ancestor::*[local-name()=$context]//tei:date"/>
                        <report test="normalize-space(@xml:id)!='' and count($all_dates[tokenize(@exclude,'\s+') = $current_date/concat('#',@xml:id)]) != count($all_dates[not(@xml:id=$current_date/@xml:id)])">ERROR: <name/> is not the target of all the other <value-of select="$context"/>//date@exclude</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-notAfter-gt-notBefore" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@notBefore[. castable as xs:date or . castable as xs:gYearMonth or . castable as xs:gYear] and @notAfter[. castable as xs:date or . castable as xs:gYearMonth or . castable as xs:gYear]]">
                        <assert test="xs:date(string-join((tokenize(@notAfter,'-'),'01','01')[position() le 3],'-')) gt xs:date(string-join((tokenize(@notBefore,'-'),'01','01')[position() le 3],'-'))">ERROR: <name/>@notBefore must be less than @notAfter</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-to-gt-from" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@to[. castable as xs:date or . castable as xs:gYearMonth or . castable as xs:gYear] and @from[. castable as xs:date or . castable as xs:gYearMonth or . castable as xs:gYear]]">
                        <assert test="xs:date(string-join((tokenize(@to,'-'),'01','01')[position() le 3],'-')) gt xs:date(string-join((tokenize(@from,'-'),'01','01')[position() le 3],'-'))">ERROR: <name/>@from must be less than @to</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-attr-custom-are-datetime" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@notBefore-custom|@notAfter-custom|@when-custom]">
                        <report test="count((@notBefore-custom|@notAfter-custom|@when-custom)[not(. castable as xs:dateTime)])&gt;0">ERROR: <name/>@<value-of select="(@notBefore-custom|@notAfter-custom|@when-custom)[not(. castable as xs:dateTime)]/local-name()"/> is not a valid dateTime value</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-when-is-valid" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@when][ancestor::tei:correspDesc]">
                        <assert test="@when castable as xs:date">ERROR: <name/>@when is not a valid date (yyyy-mm-dd)</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-notBefore-is-valid" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@notBefore][ancestor::tei:correspDesc]">
                        <assert test="@notBefore castable as xs:date">ERROR: <name/>@notBefore is not a valid date (yyyy-mm-dd)</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-notAfter-is-valid" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[@notAfter][ancestor::tei:correspDesc]">
                        <assert test="@notAfter castable as xs:date">ERROR: <name/>@notAfter is not a valid date (yyyy-mm-dd)</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-from-to-notAfter-notBefore-are-valid" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[(@from|@to|@notAfter|@notBefore)]">
                        <report test="(@from|@to|@notAfter|@notBefore)[normalize-space()][not(matches(.,'^\d\d\d\d(-(0[1-9]|1[012])|-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))*$'))]">ERROR: <name/>@<value-of select="(@from|@to|@notAfter|@notBefore)[not(. castable as xs:date)]/local-name()"/> is not a valid date (yyyy-mm-dd, yyyy-mm, yyyy)</report>
                        <report test="(@from|@to|@notAfter|@notBefore)[normalize-space()][matches(.,'^\d\d\d\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])*$')][not(. castable as xs:date)]">ERROR: <name/>@<value-of select="(@from|@to|@notAfter|@notBefore)[normalize-space()][matches(.,'^\d\d\d\d-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])*$')][not(. castable as xs:date)]/local-name()"/> is not castable as a valid date (yyyy-mm-dd, yyyy-mm, yyyy)</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="correspDesc-date-year-check" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[ancestor::tei:correspDesc]">
                        <let name="exception_dates" value="()"/>
                        <report test="(@from|@to|@notAfter|@notBefore|@when|@notBefore-custom|@notAfter-custom|@when-custom)[number(tokenize(.,'-')[1]) &lt; 1809 or number(tokenize(.,'-')[1]) &gt;1882][not(local-name() = 'notBefore' and . = $exception_dates)]">ERROR: <name/>@<value-of select="(@from|@to|@notAfter|@notBefore|@when|@notBefore-custom|@notAfter-custom|@when-custom)[number(tokenize(.,'-')[1]) &lt; 1809 or number(tokenize(.,'-')[1]) &gt;1882]/name()"/> is out of range. Expected year values should be 1809-1882</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-needs-datable-attr" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[ancestor::tei:correspAction|parent::tei:publicationStmt][not(ancestor::tei:teiHeader//tei:change[@status='cancelled'])]">
                        <report test="count((@when,@when-custom,@notBefore,@notBefore-custom,@notAfter,@notAfter-custom)) = 0">ERROR: <name/> needs a datable attribute</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="date-must-not-have-datable-attr" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[not(ancestor::tei:correspAction|parent::tei:publicationStmt)]">
                        <report test="count((@when,@when-custom,@notBefore,@notBefore-custom,@notAfter,@notAfter-custom)) &gt; 0">ERROR: <name/> This date should NOT have any datable attributes</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="notBefore-and-notAfter-must-always-be-together" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:date[ancestor::tei:correspAction|parent::tei:publicationStmt][not(ancestor::tei:teiHeader//tei:change[@status='cancelled'])][@notBefore|@notAfter]">
                        <let name="context-elem" value="."/>
                        <report test="(@notBefore and not(@notAfter)) or (@notAfter and not(@notBefore))">ERROR: <name/> with @<value-of select="(@notBefore|@notAfter)/local-name()"/> needs @<value-of select="('notBefore','notAfter')[not(.=$context-elem/(@notBefore|@notAfter)/local-name())]"/>
                        </report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="notAfter" mode="change">
                     <desc versionDate="2014-05-29" xml:lang="en">defines the latest possible date or end of a date range where this is not known precisely.</desc>
                  </attDef>
                  <attDef ident="notAfter-custom" mode="change">
                     <desc versionDate="2014-05-29" xml:lang="en">defines the latest possible end of a temporal range where both date and time can be specified.</desc>
                  </attDef>
                  <attDef ident="notBefore" mode="change">
                     <desc versionDate="2014-05-29" xml:lang="en">defines the earliest possible date or beginning of a date range where this is not known precisely.</desc>
                  </attDef>
                  <attDef ident="notBefore-custom" mode="change">
                     <desc versionDate="2014-05-29" xml:lang="en">defines the earliest possible beginning of a temporal range where both date and time can be specified.</desc>
                  </attDef>
                  <attDef ident="when" mode="change">
                     <desc versionDate="2014-05-29" xml:lang="en">defines a specific date.</desc>
                  </attDef>
                  <attDef ident="calendar" mode="delete"/>
                  <attDef ident="datingMethod" mode="delete"/>
                  <attDef ident="datingPoint" mode="delete"/>
                  <attDef ident="from" mode="delete"/>
                  <attDef ident="from-custom" mode="delete"/>
                  <attDef ident="from-iso" mode="delete"/>
                  <attDef ident="notAfter-iso" mode="delete"/>
                  <attDef ident="notBefore-iso" mode="delete"/>
                  <attDef ident="period" mode="delete"/>
                  <attDef ident="to" mode="delete"/>
                  <attDef ident="to-custom" mode="delete"/>
                  <attDef ident="to-iso" mode="delete"/>
                  <attDef ident="when-custom" mode="delete"/>
                  <attDef ident="when-iso" mode="delete"/>
               </attList>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <date when="1875-12-26">26 Dec 1875</date>
                  </egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <date notBefore="1875-12-26" notAfter="1875-12-29">[27-9] Dec 1875</date>
                  </egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <date notBefore="1875-12-28">after 27 Dec 1875</date>
                  </egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <date notAfter="1875-12-26">before 27 Dec 1875</date>
                  </egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <date when="1861-02-01" xml:id="date1" exclude="#date2"/>
                     <date when="1861-02-02" xml:id="date2" exclude="#date1"/>
                  </egXML>
                  <p>This example means ‘either 1 or 2 February 1861’.</p>
               </exemplum>
               <remarks versionDate="2016-05-06" xml:lang="en">
                  <p>Pay careful attention when entering values into <att>notBefore</att> and/or <att>notAfter</att> since they will <hi rend="italic">sometimes</hi> differ from the natural language date by +/- one day when the natural language form of the date employs exclusive reckoning whereas the TEI attributes <att>notBefore</att> and <att>notAfter</att> employ inclusive reckoning. Exclusive reckonings of dates, for example, are 'after 6 July 1870' (<hi rend="italic">i.e.</hi> the earliest date it could have been written is 5 July 1870) or 'before 6 July 1870' (the latest date it could have been written is 5 July 1870). In both cases, 6 July 1870 is not a valid date that the document could have been written. Inclusive reckonings include the date mentioned. Therefore, if you say something was written <att>notBefore</att> ‘06-07-1870’, you are saying that the document was written <hi rend="italic">on 6 July 1870 or later.</hi> Similarly, notAfter ‘06-07-1870’ means that the document was written <hi rend="italic">on or before 6 July 1870</hi>. The key when coding date ranges is to carefully consider what the earliest and latest possible date the letter could have been written <hi rend="bold">on</hi> and to use those values in <att>notBefore</att> and <att>notAfter</att>.</p>
                  <p>For more information on coding dates, see Appendix I: Dates in the Guidelines.</p>
                  <p><gi>date</gi> also appears within <gi>publicationStmt</gi>. There, all that is required is to put the publication year of the Darwin volume into <att>when</att>.</p>
               </remarks>
            </elementSpec>

            <elementSpec ident="hi" module="core" mode="change" xml:base="elements-lett/hi.xml">
               <gloss versionDate="2014-04-19" xml:lang="en">highlight</gloss>
               <desc versionDate="2014-04-19" xml:lang="en">marks text that has been distinctively rendered in some way, e.g. underlined, overlined, italicised, or in larger text or a different colour. The nature of the formatting is indicated in <att>rend</att>.</desc>
               <classes mode="change">
                  <memberOf key="att.written" mode="delete"/>
               </classes>
               <attList>
                  <attDef ident="rend" usage="req" mode="change"><gloss versionDate="2014-06-03" xml:lang="en">rendition</gloss>
                     <desc versionDate="2014-04-20" xml:lang="en">values are "<val>bold</val>" (bold), "<val>dropCap</val>" (drop capital), "<val>italic</val>" (italic), "<val>overline</val>" (overlined), "<val>smallCaps</val>" (<hi rend="smallCaps">Small Capitals</hi>), "<val>subscript</val>" (subscripted), "<val>superscript</val>" (superscripted), "<val>underline</val>" (single underlined), "<val>doubleUnderline</val>" (double underlined). <att>rend</att> can also be used to indicate changes in text size with "<val>large</val>", "<val>larger</val>", "<val>largest</val>" and "<val>small</val>", "<val>smaller</val>", "<val>smallest</val>". It can also be used to indicate printed text (<hi rend="italic">e.g.</hi> in the letterhead) using "<val>print</val>" or that the text is typescript with "<val>typescript</val>".</desc>
                     <valList type="closed" mode="replace">
                        <valItem ident="superscript"/>
                        <valItem ident="subscript"/>
                        <valItem ident="underline"/>
                        <valItem ident="doubleUnderline"/>
                        <valItem ident="overline"/>
                        <valItem ident="italic"/>
                        <valItem ident="bold"/>
                        <valItem ident="large"/>
                        <valItem ident="larger"/>
                        <valItem ident="largest"/>
                        <valItem ident="small"/>
                        <valItem ident="smaller"/>
                        <valItem ident="smallest"/>
                        <valItem ident="dropCap"/>
                        <valItem ident="smallCaps"/>
                        <valItem ident="print"/>
                        <valItem ident="typeScript"/>
                        <valItem ident="stretchyVertical"/>
                        <valItem ident="stretchyHorizontal"/>
                     </valList>
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
            … is the enclosed the correct Title of the <hi rend="underline">Insectivorous Plants</hi>? … 
</egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
            … The <hi rend="underline">No<hi rend="superscript">s</hi></hi> given in this list are the correct ones.…
        </egXML>
               </exemplum>
               <remarks versionDate="2014-04-20" xml:lang="en">
                  <p>All the typescripted text that we have encountered so far has been created using typewriters only capable of outputting capitalised text. For this reason, "<val>typescript</val>" is currently presumed to also mean that the text is capitalised. Should anyone encounter typescripted materials that are <hi rend="bold">not</hi> capitalised, please contact Michael Hawkins so we can revise the transcription guide and coded text appropriately.</p>
               </remarks>
            </elementSpec>
            
            <elementSpec ident="lb" module="core" mode="change" xml:base="elements-lett/lb.xml">
               <desc versionDate="2014-06-09" xml:lang="en">marks the beginning of a line of prose, including the first line of a paragraph. Although formally defined as ‘line break’, it is more usefully thought of as ‘line beginning’. <gi>lb</gi> should be sparingly used within the Darwin Correspondence to indicate a linebreak within the original letter text that we wish to preserve within the output.</desc>
               <classes mode="change">
                  <memberOf key="att.breaking" mode="delete"/>
                  <memberOf key="att.edition" mode="delete"/>
                  <memberOf key="att.spanning" mode="delete"/>
               </classes>
               <attList>
                  <attDef ident="resp" usage="opt" mode="change"/>
                  <attDef ident="type" mode="change">
                     <!--TODO: Review use of lb/@type. Remove from data or document in ODD. -->
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="subtype" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <p>With much respect, I beg to remain | Your’s faithfully | Ch. Darwin <lb type="none"/> His Excellency | Sir G.&#160;Grey | &amp;c &amp;c &amp;c</p>
                  </egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <p rend="left">Charles Darwin Esq. M.A. | Down, Beckenham. | Kent. <lb type="full"/> **Such as the following:—</p>
                  </egXML>
               </exemplum>
               <remarks versionDate="2014-05-21" xml:lang="en">
                  <p>Where <gi>lb</gi> occurs between two words, one space should be left before it. Where it divides a single word or occurs at the beginning of a paragraph, there should be no space on either side of it.</p>
                  <p>If you find yourself wanting to insert forced linebreaks at the very end of a paragraph (a common usage in DarML), please consult the Guidelines on paragraph (or block) styling on how to indicate that a pargraph has extra (or no) linebreaks immediately before it. If you are trying to insert forced linebreaks in parts of the metadata, please contact Michael Hawkins as this might indicate the need to update the code that renders our materials in print and online.</p>
               </remarks>
            </elementSpec>
            
            <elementSpec ident="note" module="core" mode="change" xml:base="elements-nameregs/note.xml">
               <gloss versionDate="2014-06-09" xml:lang="en">note</gloss>
               <classes mode="change">
                  <memberOf key="att.anchoring" mode="delete"/>
                  <memberOf key="att.placement" mode="delete"/>
                  <memberOf key="att.pointing" mode="delete"/>
                  <memberOf key="att.written" mode="delete"/>
               </classes>
               <constraintSpec ident="check-note-nesting" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:note">
                        <report test="not(parent::tei:person|parent::tei:personGrp|parent::tei:org)">ERROR: <name/> must be a child of <value-of select="root(/)/*/local-name()"/>.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="n" usage="opt" mode="change"/>
                  <attDef ident="subtype" mode="change">
                     <desc xml:lang="en" versionDate="2016-06-30">describes the subtype of endorsement.</desc>
                  </attDef>
                  <attDef ident="type" usage="opt" mode="change">
                     <desc xml:lang="en" versionDate="2016-06-30">describes the type of notes.</desc>
                     <valList type="closed" mode="replace">
                        <valItem ident="biography"/>
                        <valItem ident="dates"/>
                        <valItem ident="further"/>
                        <valItem ident="keywords"/>
                        <valItem ident="sources"/>
                        <valItem ident="volume"/>
                     </valList>
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec ident="p" module="core" mode="change" xml:base="elements-lett/p.xml">
               <desc xml:lang="en" versionDate="2014-05-26">marks paragraphs in prose. No attributes are normally needed but <att>rend</att> (rendition) is available and it is used to indicate (in the case of textual transcriptions) how the item was rendered in the original text. Its values are "<val>right</val>" (right-aligned), "<val>left</val>" (left-aligned), "<val>centre</val>" (centred), or "<val>indent0</val>", "<val>indent1</val>", "<val>indent2</val>", "<val>indent3</val>" (to "<val>indent40</val>", to indicate the level of indentation on the first line of a paragraph),  "<val>hangingIndent1</val>", "<val>hangingIndent2</val>", "<val>hangingIndent3</val>" (to indicate levels of hanging indents) and "<val>insetBlock</val>" (for a narrower inset block of text with increased margins on both the left and right). If <att>rend</att> is omitted, the paragraph will be output according to the destination format's (ie. print or web) default paragraph styles.</desc>
               <classes mode="change">
                  <memberOf key="att.declaring" mode="delete"/>
                  <memberOf key="att.fragmentable" mode="delete"/>
                  <memberOf key="att.written" mode="delete"/>
               </classes>
               <attList>
                  <attDef ident="rend" mode="change">
                     <valList type="closed" mode="replace">
                        <valItem ident="right"/>
                        <valItem ident="left"/>
                        <valItem ident="centre"/>
                        <valItem ident="indent0"/>
                        <valItem ident="indent1"/>
                        <valItem ident="indent2"/>
                        <valItem ident="indent3"/>
                        <valItem ident="blockIndent"/>
                        <valItem ident="hangingIndent1"/>
                        <valItem ident="hangingIndent2"/>
                        <valItem ident="hangingIndent3"/>
                        <valItem ident="blockquote"/>
                     </valList>
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
               <exemplum xml:lang="en" versionDate="2014-06-10">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <p>P.S.&#160;Upon the whole the Cirripedia show more affinity, <hi rend="underline">I think</hi>, to the Upper Chalk, than to any other stage— <hi rend="underline">pray</hi> tell me whether Upper Chalk fossils are generally more or less abundant than those of the Lower Chalk &amp; Chalk Marl</p>
                  </egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <p rend="centre">From the Insects to their friend, Charles Darwin.</p>
                  </egXML>
               </exemplum>
               <remarks versionDate="2014-05-21" xml:lang="en">
                  <p><att>rend</att> is primarily to be used to record how the text was rendered in the original document. While it <hi rend="bold">may</hi> be used to force certain renderings on the outputted versions that were not present in the original, editors should contact Michael Hawkins should they feel the desire to do so.</p>
                  <p><att>rend</att> has not been given the value "<val>justified</val>" (where both the left and right hand sides of the texts are flush with the margin) since value was not used within DarXML.</p>
               </remarks>
            </elementSpec>
            
            <elementSpec ident="ref" module="core" mode="change" xml:base="elements-lett/ref.xml">
               <classes mode="change">
                  <memberOf key="att.cReferencing" mode="delete"/>
                  <memberOf key="att.declaring" mode="delete"/>
                  <memberOf key="att.internetMedia" mode="delete"/>
               </classes>
               <constraintSpec ident="ref-note-check_pointer" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:ref[not(matches(@target,'^#tnote'))][matches(@target,'^#')]">
                        <let name="notes" value="./ancestor::tei:TEI//tei:div[@type='footnotes']//tei:note"/>
                        <assert test="@target = $notes/concat('#',@xml:id)">ERROR: <name/>@target must be a valid pointer to a note/@xml:id</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="ref-check_file_pointer" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:ref[matches(@target,'^(\.\./|\./)*((bibliographies|letters|nameregs|repo|copies|drafts)/)*(DCP-LETT-|nameregs_|bibl_|repo_).+\.xml$')]">
                        <let name="document_uri" value="string-join(tokenize(document-uri(/),'/')[position() != last()],'/')"/>
                        <assert test="doc-available(concat($document_uri,'/',@target))">ERROR: <name/> points to a non-existent file (<value-of select="@target"/>)</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="resp" mode="change">
                     <!--TODO: Document use of ref/@resp-->
                  </attDef>
                  <attDef ident="target" usage="req" mode="change">
                     <desc xml:lang="en" versionDate="2016-06-30">points to either to a footnote (eg. #foot.f1), or another file in our collection (eg. ../letters/DCP-LETT-1.xml or ../nameregs/nameregs_1.xml) or to an external resource (http://....)".</desc>
                     <datatype><rng:data type="string">
                           <rng:param name="pattern">(#.+|https*://.+|(((\.\./|\./)*(bibliographies|letters|nameregs|repo|copies|drafts)|\.)/)*(DCP-LETT-|nameregs_|bibl_|repo_).+\.xml)</rng:param>
                        </rng:data>
                     </datatype>
                  </attDef>
                  <attDef ident="type" mode="change">
                     <!--TODO: Review use of ref/@type. Remove from data or document in ODD. -->
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="evaluate" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="subtype" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="targetLang" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
               <exemplum xml:lang="en">
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <ref target="#foot-10000.f1"/>
                  </egXML>
               </exemplum>
            </elementSpec>

            <elementSpec module="core" ident="term" mode="change">
               <!--TODO: Improve documentation-->
               <desc xml:lang="en" versionDate="2022-08-08"/>
               <classes mode="change">
                  <memberOf key="att.cReferencing" mode="delete"/>
                  <memberOf key="att.canonical" mode="delete"/>
                  <memberOf key="att.declaring" mode="delete"/>
                  <memberOf key="att.global" mode="delete"/>
                  <memberOf key="att.pointing" mode="delete"/>
                  <memberOf key="att.sortable" mode="delete"/>
               </classes>
               <attList>
                  <attDef ident="type" mode="change">
                     <!--TODO: Improve documentation-->
                  </attDef>
                  <attDef ident="subtype" mode="delete"/>
               </attList>
            </elementSpec>
            
            <!--Elements from namesdates-->

            <elementSpec module="namesdates" ident="affiliation" mode="change">
               <!--TODO: Review use of affiliation. Remove from data or document in ODD. -->
               <desc xml:lang="en" versionDate="2022-08-08"/>
               <classes mode="change">
                  <memberOf key="att.datable" mode="delete"/>
                  <memberOf key="att.editLike" mode="delete"/>
                  <memberOf key="att.global" mode="delete"/>
                  <memberOf key="att.naming" mode="delete"/>
                  <memberOf key="att.typed" mode="delete"/>
               </classes>
               <attList>
                  <attDef ident="type" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec module="namesdates" ident="forename" mode="change" xml:base="elements-nameregs/forename.xml">
               <classes mode="change">
                  <memberOf key="att.datable" mode="add"/><!-- Custom addition for DCP-->
                  <memberOf key="att.personal" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-has-text-content1" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:forename">
                        <report test="not(normalize-space(.))">ERROR: <name/> has no textual content.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="notAfter" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="notBefore" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="resp" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="type" usage="opt" mode="change">
                     <defaultVal>preferred</defaultVal>
                     <valList type="closed" mode="replace">
                        <valItem ident="preferred"/>
                     </valList>
                  </attDef>
                  <attDef ident="xml:lang" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="calendar" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="datingMethod" mode="delete"/>
                  <attDef ident="datingPoint" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="from" mode="delete"/>
                  <attDef ident="from-custom" mode="delete"/>
                  <attDef ident="from-iso" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="notAfter-custom" mode="delete"/>
                  <attDef ident="notAfter-iso" mode="delete"/>
                  <attDef ident="notBefore-custom" mode="delete"/>
                  <attDef ident="notBefore-iso" mode="delete"/>
                  <attDef ident="period" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="subtype" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="to" mode="delete"/>
                  <attDef ident="to-custom" mode="delete"/>
                  <attDef ident="to-iso" mode="delete"/>
                  <attDef ident="when" mode="delete"/>
                  <attDef ident="when-custom" mode="delete"/>
                  <attDef ident="when-iso" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec module="namesdates" ident="genName" mode="change" xml:base="elements-nameregs/genName.xml">
               <classes mode="change">
                  <memberOf key="att.personal" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-has-text-content2" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:genName">
                        <report test="not(normalize-space(.))">ERROR: <name/> has no textual content.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="resp" mode="change">
                     <!--TODO: Review use of genName/@resp. Remove from data or document in ODD. -->
                  </attDef>
                  <attDef ident="type" usage="opt" mode="change">
                     <defaultVal>honorific</defaultVal>
                     <valList type="closed" mode="replace">
                        <valItem ident="honorific"/>
                     </valList>
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="subtype" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec module="namesdates" ident="nameLink" mode="change" xml:base="elements-nameregs/nameLink.xml">
               <classes mode="change">
                  <memberOf key="att.datable" mode="add"/><!-- Custom addition for DCP-->
                  <memberOf key="att.global" mode="delete"/>
                  <memberOf key="att.typed" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-has-text-content3" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:nameLink">
                        <report test="not(normalize-space(.))">ERROR: <name/> has no textual content.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>

            <elementSpec module="namesdates" ident="org" mode="change" xml:base="elements-nameregs/org.xml">
               <classes mode="change">
                  <memberOf key="att.docStatus"/>
                  <memberOf key="att.editLike" mode="delete"/>
                  <memberOf key="att.sortable" mode="delete"/>
               </classes>
               <constraintSpec ident="org-xml-id-value-must-match-filename" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:org">
                        <report test="not(concat(replace(@xml:id,'^DCP-IDENT-','nameregs_'),'.xml') = tokenize(document-uri(/),'/')[last()])">@xml:id number must match namereg file number.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="status" usage="opt" mode="change">
                     <valList type="closed" mode="replace">
                        <valItem ident="draft"/>
                        <valItem ident="released"/>
                     </valList>
                  </attDef>
                  <attDef ident="type" mode="change">
                     <!--TODO: Review use of org/@type. Remove from data or document in ODD. -->
                  </attDef>
                  <attDef ident="xml:id" usage="req" mode="change"/>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="role" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="subtype" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec module="namesdates" ident="orgName" mode="change">
               <!--TODO: document-->
               <desc xml:lang="en" versionDate="2022-08-08"/>
               <classes mode="change">
                  <memberOf key="att.datable" mode="delete"/>
                  <memberOf key="att.editLike" mode="delete"/>
                  <memberOf key="att.personal" mode="delete"/>
               </classes>
               <attList>
                  <attDef ident="subtype" mode="change">
                     <!--TODO: Review use of orgName/@subtype. Remove from data or document in ODD. -->
                  </attDef>
                  <attDef ident="type" mode="change">
                     <!--TODO: Review use of orgName/@type. Remove from data or document in ODD. -->
                  </attDef>
                  <attDef ident="xml:id" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="xml:lang" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec ident="persName" module="namesdates" mode="change" xml:base="elements-nameregs/persName.xml">
               <gloss versionDate="2014-04-25" xml:lang="en">personal name</gloss>
               <desc xml:lang="en" versionDate="2014-05-26">contains as many as appropriate of the component parts of a person's name, i.e. <gi>roleName</gi>, <gi>forename</gi>, <gi>surname</gi>, <gi>genName</gi>, <gi>nameLink</gi>, <gi>name</gi>.</desc>
               <classes mode="change">
                  <memberOf key="att.datable" mode="delete"/>
                  <memberOf key="att.editLike" mode="delete"/>
                  <memberOf key="att.personal" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-persName-not-nested" scheme="schematron">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:persName">
                        <assert test="(parent::tei:person|parent::tei:personGrp)[not(parent::*)]">
                           <name/> may only be a child of a root person or personGrp</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="resp" mode="change">
                     <!--TODO: Review use of persName/@resp. Remove from data or document in ODD. -->
                  </attDef>
                  <attDef ident="subtype" usage="opt" mode="change">
                     <valList type="closed" mode="replace">
                        <valItem ident="nickname"/>
                        <valItem ident="nickname_full"/>
                        <valItem ident="preferred"/>
                        <valItem ident="preferred_surname"/>
                        <valItem ident="title"/>
                     </valList>
                  </attDef>
                  <attDef ident="type" usage="opt" mode="change">
                     <defaultVal>additional</defaultVal>
                     <valList type="closed" mode="replace">
                        <valItem ident="additional"/>
                     </valList>
                  </attDef>
                  <attDef ident="xml:lang" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
               <exemplum xml:lang="en">
                  <p>For the name</p>
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <persName>
                        <forename>Charles</forename>
                        <forename>Robert</forename>
                        <surname>Darwin</surname>
                     </persName>
                  </egXML>
               </exemplum>
               <exemplum xml:lang="en">
                  <p>For the canonical version</p>
                  <egXML xmlns="http://www.tei-c.org/ns/Examples">
                     <persName xml:id="canonical">Darwin, C. R.</persName>
                  </egXML>
               </exemplum>
               <remarks versionDate="2014-04-25" xml:lang="en">
                  <p><gi>persName</gi> is ony used to record an individual's name (or names) or the names of a group of individuals whose personal names are not known (for example, the Editors of Nature or Fellows of the Linnean Society). Each identifiable ’individual‘ should be coded with their own <gi>persName</gi>. Should you wish to record an organisation's name (like The Linnean Society), see <gi>orgName</gi> </p>
                  <p>Within the letter transcription files, the shorten version should be used <tag>persName key="../nameregs/nameregs_1.xml"</tag>Darwin, Charles Robert<tag>/persName</tag> should be used. The more expanded versions should be used within the names files.</p>
                  <p>If some or all of a person's name is not explicitly stated, or is given in code, or is drastically abbreviated, but can be deduced from external evidence, <gi>persName</gi>, <gi>forename</gi>, <gi>surname</gi>, <gi>name</gi> and<gi>genName</gi> can all take an <att>evidence</att> value of "<val>external</val>". If it is based on conjecture based on information within the letter, <att>evidence</att> should have a value of "<val>conjecture</val>".</p>
                  <p>If there is any doubt about the identification, a <att>cert</att> value of "<val>high</val>", "<val>medium</val>" or "<val>low</val>" may be added to either <gi>persName</gi> or any of its component parts.</p>
                  <p>The proper nouns in <gi>persName</gi> should be given in regularised forms as established in projec guidelines.</p>
               </remarks>
            </elementSpec>

            <elementSpec module="namesdates" ident="person" mode="change" xml:base="elements-nameregs/person.xml">
               <classes mode="change">
                  <memberOf key="att.docStatus"/>
                  <memberOf key="att.editLike" mode="delete"/>
                  <memberOf key="att.sortable" mode="delete"/>
               </classes>
               <constraintSpec ident="person-xml-id-value-must-match-filename" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:person">
                        <report test="not(concat(replace(@xml:id,'^DCP-IDENT-','nameregs_'),'.xml') = tokenize(document-uri(/),'/')[last()])">@xml:id number must match namereg file number.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="n" mode="change">
                     <!--TODO: May only contain a,b,c,d,e. 
                        Used as a shim to ensure that individuals with the same name are output in a specificed order.
                        Move value to @sortKey or leave as is and document
                     -->
                  </attDef>
                  <attDef ident="status" usage="opt" mode="change">
                     <valList type="closed" mode="replace">
                        <valItem ident="draft"/>
                        <valItem ident="released"/>
                     </valList>
                  </attDef>
                  <attDef ident="xml:id" usage="req" mode="change"/>
                  <attDef ident="age" mode="delete"/>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="role" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="sex" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec module="namesdates" ident="personGrp" mode="change" xml:base="elements-nameregs/personGrp.xml">
               <classes mode="change">
                  <memberOf key="att.docStatus"/>
                  <memberOf key="att.sortable" mode="delete"/>
               </classes>
               <constraintSpec ident="personGrp-xml-id-value-must-match-filename" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:personGrp">
                        <report test="not(concat(replace(@xml:id,'^DCP-IDENT-','nameregs_'),'.xml') = tokenize(document-uri(/),'/')[last()])">@xml:id number must match namereg file number.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="status" usage="opt" mode="change">
                     <valList type="closed" mode="replace">
                        <valItem ident="draft"/>
                        <valItem ident="released"/>
                     </valList>
                  </attDef>
                  <attDef ident="xml:id" usage="req" mode="change"/>
                  <attDef ident="age" mode="delete"/>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="role" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="sex" mode="delete"/>
                  <attDef ident="size" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:lang" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <elementSpec module="namesdates" ident="roleName" mode="change" xml:base="elements-nameregs/roleName.xml">
               <classes mode="change">
                  <memberOf key="att.global" mode="delete"/>
                  <memberOf key="att.personal" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-has-text-content4" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:roleName">
                        <report test="not(normalize-space(.))">ERROR: <name/> has no textual content.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="type" usage="opt" mode="change">
                     <defaultVal>honorific</defaultVal>
                     <valList type="closed" mode="replace">
                        <valItem ident="honorific"/>
                     </valList>
                  </attDef>
                  <attDef ident="subtype" mode="delete"/>
               </attList>
            </elementSpec>
                  
            <elementSpec module="namesdates" ident="sex" mode="change">
               <!--TODO: document-->
               <desc xml:lang="en" versionDate="2022-10-11"/>
               <classes mode="change">
                  <memberOf key="att.datable" mode="delete"/>
                  <memberOf key="att.editLike" mode="delete"/>
                  <memberOf key="att.global" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-sex-has-no-text-content" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:sex">
                        <report test="normalize-space(.) or *">ERROR: <name/> must be an empty element. It must not contain any textual content or elements.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="value" usage="req" mode="change">
                     <desc xml:lang="en" versionDate="2023-06-12">contains a coded value for the sex of the individual.</desc>
                     <valList type="closed" mode="replace">
                        <valItem ident="F">
                           <desc xml:lang="en" versionDate="2023-06-12">Female</desc>
                        </valItem>
                        <valItem ident="M">
                           <desc xml:lang="en" versionDate="2023-06-12">Male</desc>
                        </valItem>
                        <valItem ident="U">
                           <desc xml:lang="en" versionDate="2023-06-12">Unknown</desc>
                        </valItem>
                     </valList>
                  </attDef>
                  <attDef ident="subtype" mode="delete"/>
                  <attDef ident="type" mode="delete"/>
               </attList>
               <remarks versionDate="2023-06-13" xml:lang="en">
                  <p>The current constraints on <att>value</att> reflect the present contents of the name register entries. Other codes for <att>value</att> can be added into the ODD if needed.</p>
               </remarks>
            </elementSpec>

            <elementSpec module="namesdates" ident="surname" mode="change" xml:base="elements-nameregs/surname.xml">
               <classes mode="change">
                  <memberOf key="att.datable" mode="add"/><!-- Custom addition for DCP-->
                  <memberOf key="att.personal" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-has-text-content5" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:surname">
                        <report test="not(normalize-space(.))">ERROR: <name/> has no textual content.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <attList>
                  <attDef ident="notAfter" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="notBefore" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="type" usage="opt" mode="change">
                     <defaultVal>preferred</defaultVal>
                     <valList type="closed" mode="replace">
                        <valItem ident="preferred"/>
                     </valList>
                  </attDef>
                  <attDef ident="xml:lang" mode="change">
                     <!--TODO: document-->
                  </attDef>
                  <attDef ident="ana" mode="delete"/>
                  <attDef ident="calendar" mode="delete"/>
                  <attDef ident="cert" mode="delete"/>
                  <attDef ident="change" mode="delete"/>
                  <attDef ident="copyOf" mode="delete"/>
                  <attDef ident="corresp" mode="delete"/>
                  <attDef ident="datingMethod" mode="delete"/>
                  <attDef ident="datingPoint" mode="delete"/>
                  <attDef ident="exclude" mode="delete"/>
                  <attDef ident="facs" mode="delete"/>
                  <attDef ident="from" mode="delete"/>
                  <attDef ident="from-custom" mode="delete"/>
                  <attDef ident="from-iso" mode="delete"/>
                  <attDef ident="n" mode="delete"/>
                  <attDef ident="next" mode="delete"/>
                  <attDef ident="notAfter-custom" mode="delete"/>
                  <attDef ident="notAfter-iso" mode="delete"/>
                  <attDef ident="notBefore-custom" mode="delete"/>
                  <attDef ident="notBefore-iso" mode="delete"/>
                  <attDef ident="period" mode="delete"/>
                  <attDef ident="prev" mode="delete"/>
                  <attDef ident="rend" mode="delete"/>
                  <attDef ident="rendition" mode="delete"/>
                  <attDef ident="resp" mode="delete"/>
                  <attDef ident="sameAs" mode="delete"/>
                  <attDef ident="select" mode="delete"/>
                  <attDef ident="source" mode="delete"/>
                  <attDef ident="style" mode="delete"/>
                  <attDef ident="subtype" mode="delete"/>
                  <attDef ident="synch" mode="delete"/>
                  <attDef ident="to" mode="delete"/>
                  <attDef ident="to-custom" mode="delete"/>
                  <attDef ident="to-iso" mode="delete"/>
                  <attDef ident="when" mode="delete"/>
                  <attDef ident="when-custom" mode="delete"/>
                  <attDef ident="when-iso" mode="delete"/>
                  <attDef ident="xml:base" mode="delete"/>
                  <attDef ident="xml:id" mode="delete"/>
                  <attDef ident="xml:space" mode="delete"/>
               </attList>
            </elementSpec>

            <!--Elements from figures-->

            <elementSpec module="figures" ident="formula" mode="change">
               <classes mode="change">
                  <memberOf key="att.global" mode="delete"/>
                  <memberOf key="att.notated" mode="delete"/>
               </classes>
               <content>
                  <rng:ref name="mathml.math"/>
               </content>
            </elementSpec>

            <!--Elements from linking-->

            <elementSpec module="linking" ident="seg" mode="change" xml:base="elements-nameregs/seg.xml">
               <classes mode="change">
                  <memberOf key="att.global" mode="delete"/>
                  <memberOf key="att.notated" mode="delete"/>
                  <memberOf key="att.segLike" mode="delete"/>
                  <memberOf key="att.typed" mode="delete"/>
                  <memberOf key="att.written" mode="delete"/>
               </classes>
               <constraintSpec ident="ensure-parent-is-choice" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:seg">
                        <report test="not(parent::tei:choice)">ERROR: <name/> is only used within choice to record datable names.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="ensure-has-name-contents" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:seg">
                        <assert test="exists(tei:surname|tei:forename|tei:nameLink|tei:genName|tei:roleName)">ERROR: <name/> must contain a datable version of one of the name elements.</assert>
                     </rule>
                  </constraint>
               </constraintSpec>
               <constraintSpec ident="must-not-have-text-child" scheme="schematron" mode="add">
                  <constraint>
                     <rule xmlns="http://purl.oclc.org/dsdl/schematron" context="tei:seg">
                        <report test="text()[normalize-space(.)]">ERROR: All name text within <name/> must be within a datable version of one of the name elements.</report>
                     </rule>
                  </constraint>
               </constraintSpec>
            </elementSpec>
         </schemaSpec>
      </body>
   </text>
</TEI>